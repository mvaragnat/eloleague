# Name of your application. Used to uniquely configure containers.
service: uniladder

# Name of the container image.
image: uniladder

# Deploy to these servers.
servers:
  web:
    hosts:
      - 188.166.138.64
    labels:
      traefik.enable: true

# Enable SSL auto certification via Let's Encrypt
# proxy:
#   ssl: true
#   host: 188.166.138.64

registry:
  server: registry.digitalocean.com
  username: root
  password:
    - KAMAL_REGISTRY_PASSWORD

env:
  secret:
    - RAILS_MASTER_KEY
    - DATABASE_URL
    - KAMAL_REGISTRY_PASSWORD
  clear:
    APP_HOST: 188.166.138.64

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
# aliases:
#   console: app exec --interactive --reuse "bin/rails console"
#   shell: app exec --interactive --reuse "bash"
#   logs: app logs -f
#   dbc: app exec --interactive --reuse "bin/rails dbconsole"


# Use a persistent storage volume for sqlite database files and local Active Storage files.
# Recommended to change this to a mounted volume path that is backed up off server.
# volumes:
#   - "uniladder_storage:/rails/storage"


# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
# asset_path: /rails/public/assets

# Configure the image builder.
builder:
  arch: amd64

# Use a different ssh user than root
# ssh:
#   user: root
#   extra_opts:
#     - "-o StrictHostKeyChecking=no"

# Use accessory services (secrets come from .kamal/secrets).
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     # Change to 3306 to expose port to the world instead of just local network.
#     port: "127.0.0.1:3306:3306"
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# healthcheck:
#   path: /up
#   port: 3000
